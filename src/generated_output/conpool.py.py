# -*- encoding:ascii -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 6
_modified_time = 1321981335.433092
_template_filename='../../../templates/conpool.py'
_template_uri='conpool.py'
_template_cache=cache.Cache(__name__, _modified_time)
_source_encoding='ascii'
_exports = []


def render_body(context,**pageargs):
    context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        date = context.get('date', UNDEFINED)
        keyspace = context.get('keyspace', UNDEFINED)
        servers = context.get('servers', UNDEFINED)
        credentials = context.get('credentials', UNDEFINED)
        author = context.get('author', UNDEFINED)
        __M_writer = context.writer()
        # SOURCE LINE 1
        __M_writer(u"'''\nAuto Generated by my2ca\n@author: ")
        # SOURCE LINE 3
        __M_writer(unicode(author))
        __M_writer(u'\nGenerated on ')
        # SOURCE LINE 4
        __M_writer(unicode(date))
        __M_writer(u'\n\'\'\'\n\nimport pycassa\n\n\'\'\'\nPlease use another mechanism to handle these data\n\'\'\'\nkeyspace = "')
        # SOURCE LINE 12
        __M_writer(unicode(keyspace))
        __M_writer(u'"\nservers = ')
        # SOURCE LINE 13
        __M_writer(unicode(servers))
        __M_writer(u'\ncredentials = ')
        # SOURCE LINE 14
        __M_writer(unicode(credentials))
        __M_writer(u'\n\n"""\nThe Connection Pool\n"""\nconnection_pool = pycassa.connect(keyspace=keyspace, servers=servers, credentials=credentials)\n\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


